"""TimeCounter Update

Revision ID: 0c2ac5c05c3b
Revises: 848bc52e65cd
Create Date: 2025-01-20 20:24:31.078616

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0c2ac5c05c3b'
down_revision: Union[str, None] = '848bc52e65cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('time_parse',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp_start', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('time_counter_log', sa.Column('parse_id', sa.Integer(), nullable=True))
    op.add_column('time_counter_log', sa.Column('timestamp', sa.BigInteger(), nullable=True))
    op.alter_column('time_counter_log', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.create_foreign_key(None, 'time_counter_log', 'time_parse', ['parse_id'], ['id'])
    op.drop_column('time_counter_log', 'is_parsed')
    op.add_column('user', sa.Column('time_spended_summary', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'time_spended_summary')
    op.add_column('time_counter_log', sa.Column('is_parsed', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'time_counter_log', type_='foreignkey')
    op.alter_column('time_counter_log', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('time_counter_log', 'timestamp')
    op.drop_column('time_counter_log', 'parse_id')
    op.drop_table('time_parse')
    # ### end Alembic commands ###
